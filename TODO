# Dynamic Type Check

Although type documentation is the main purpose of RubyBreaker, this
documentation can be used to enforce correct types at runtime. It is often
helpful to find type errors earlier on during execution to narrow down the
root cause of the problem.

# Hybrid of Breakable and Broken

A module or class cannot be both Breakable and Broken. Once it is declared
to be Broken, it is Broken no matter what. In theory, it is possible to
selectively auto-document methods that are not yet documented.

# RDoc Documentation

The output of RubyBreaker is an executable Ruby code (for the convenience of
the author). But, for most Ruby programmers, this documentation may be more
useful if the output was somehow incorporated with the RDoc output.

# Ruby on Rails Support

Duh...

# PERMANENT LIMITATIONS

* Block argument cannot be auto-documented. 
* Manual modification (minimal) of code is required.
* No parametric polymorphic types are supported. The lack of this type is
  not a bug but a feature! Polymorphic types are just headaches!

